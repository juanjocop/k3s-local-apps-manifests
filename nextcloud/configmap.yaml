apiVersion: v1
kind: ConfigMap
metadata:
  name: nextcloud-cm
  namespace: nextcloud
data:
  php.ini: |
    [PHP]
    upload_max_filesize = 100M
    post_max_size = 100M
    max_execution_time = 200
    memory_limit = 512M
    max_input_time = 120
  000-default.conf: |
    <VirtualHost *:80>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf

        Timeout 300
        KeepAlive On
        KeepAliveTimeout 40


    </VirtualHost>


# ---

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-conf
#   namespace: nextcloud
# data:
#   nginx.conf: |
#     worker_processes auto;

#     events {
#         worker_connections 768;
#     }

#     http {
#       include       mime.types;
#       default_type  application/octet-stream;

#       sendfile        on;
#       keepalive_timeout  65;

#       # Set the `immutable` cache control options only for assets with a cache busting `v` argument
#       map $arg_v $asset_immutable {
#           "" "";
#       default "immutable";
#       }

#       # tcp_nopush     on;
#       tcp_nodelay     on;
#       server_tokens off;

#       upstream php-handler {
#         server 127.0.0.1:9000;
#       }

#       server {
#           listen 80;

#           # HSTS settings
#           # WARNING: Only add the preload option once you read about
#           # the consequences in https://hstspreload.org/. This option
#           # will add the domain to a hardcoded list that is shipped
#           # in all major browsers and getting removed from this list
#           # could take several months.
#           add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;

#           # set max upload size and increase upload timeout:
#           client_max_body_size 512M;
#           client_body_timeout 300s;
#           fastcgi_buffers 64 4K;

#           # The settings allows you to optimize the HTTP2 bandwidth.
#           # See https://blog.cloudflare.com/delivering-http-2-upload-speed-improvements/
#           # for tuning hints
#           client_body_buffer_size 512k;

#           # Enable gzip but do not remove ETag headers
#           gzip on;
#           gzip_vary on;
#           gzip_comp_level 4;
#           gzip_min_length 256;
#           gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
#           gzip_types application/atom+xml text/javascript application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

#           # Pagespeed is not supported by Nextcloud, so if your server is built
#           # with the `ngx_pagespeed` module, uncomment this line to disable it.
#           #pagespeed off;

#           # HTTP response headers borrowed from Nextcloud `.htaccess`
#           add_header Referrer-Policy                      "no-referrer"       always;
#           add_header X-Content-Type-Options               "nosniff"           always;
#           add_header X-Frame-Options                      "SAMEORIGIN"        always;
#           add_header X-Permitted-Cross-Domain-Policies    "none"              always;
#           add_header X-Robots-Tag                         "noindex, nofollow" always;
#           add_header X-XSS-Protection                     "1; mode=block"     always;

#           # Remove X-Powered-By, which is an information leak
#           fastcgi_hide_header X-Powered-By;

#           # Path to the root of your installation
#           root /var/www/html;

#           # Specify how to handle directories -- specifying `/index.php$request_uri`
#           # here as the fallback means that Nginx always exhibits the desired behaviour
#           # when a client requests a path that corresponds to a directory that exists
#           # on the server. In particular, if that directory contains an index.php file,
#           # that file is correctly served; if it doesn't, then the request is passed to
#           # the front-end controller. This consistent behaviour means that we don't need
#           # to specify custom rules for certain paths (e.g. images and other assets,
#           # `/updater`, `/ocm-provider`, `/ocs-provider`), and thus
#           # `try_files $uri $uri/ /index.php$request_uri`
#           # always provides the desired behaviour.
#           index index.php index.html /index.php$request_uri;

#           # Rule borrowed from `.htaccess` to handle Microsoft DAV clients
#           location = / {
#               if ( $http_user_agent ~ ^DavClnt ) {
#                   return 302 /remote.php/webdav/$is_args$args;
#               }
#           }

#           location = /robots.txt {
#               allow all;
#               log_not_found off;
#               access_log off;
#           }

#           # Make a regex exception for `/.well-known` so that clients can still
#           # access it despite the existence of the regex rule
#           # `location ~ /(\.|autotest|...)` which would otherwise handle requests
#           # for `/.well-known`.
#           location ^~ /.well-known {
#               # The rules in this block are an adaptation of the rules
#               # in `.htaccess` that concern `/.well-known`.

#               location = /.well-known/carddav { return 301 /remote.php/dav/; }
#               location = /.well-known/caldav  { return 301 /remote.php/dav/; }

#               location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
#               location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

#               # Let Nextcloud's API for `/.well-known` URIs handle all other
#               # requests by passing them to the front-end controller.
#               return 301 /index.php$request_uri;
#           }

#           # Rules borrowed from `.htaccess` to hide certain paths from clients
#           location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
#           location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }

#           # Ensure this block, which passes PHP files to the PHP process, is above the blocks
#           # which handle static assets (as seen below). If this block is not declared first,
#           # then Nginx will encounter an infinite rewriting loop when it prepends `/index.php`
#           # to the URI, resulting in a HTTP 500 error response.
#           location ~ \.php(?:$|/) {
#               # Required for legacy support
#               rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|ocs-provider\/.+|.+\/richdocumentscode\/proxy) /index.php$request_uri;

#               fastcgi_split_path_info ^(.+?\.php)(/.*)$;
#               set $path_info $fastcgi_path_info;

#               try_files $fastcgi_script_name =404;

#               include fastcgi_params;
#               fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#               fastcgi_param PATH_INFO $path_info;
#               fastcgi_param HTTPS on;

#               fastcgi_param modHeadersAvailable true;         # Avoid sending the security headers twice
#               fastcgi_param front_controller_active true;     # Enable pretty urls
#               fastcgi_pass php-handler;

#               fastcgi_intercept_errors on;
#               fastcgi_request_buffering off;

#               fastcgi_max_temp_file_size 0;
#           }

#           # Javascript mimetype fixes for nginx
#           # Note: The block below should be removed, and the js|mjs section should be
#           # added to the block below this one. This is a temporary fix until Nginx 
#           # upstream fixes the js mime-type
#           location ~* \.(?:js|mjs)$ {
#               types { 
#                   text/javascript js mjs;
#               } 
#               try_files $uri /index.php$request_uri;
#               add_header Cache-Control "public, max-age=15778463, $asset_immutable";
#               access_log off;
#           }

#           # Serve static files
#           location ~ \.(?:css|svg|gif|png|jpg|ico|wasm|tflite|map|ogg|flac)$ {
#               try_files $uri /index.php$request_uri;
#               add_header Cache-Control "public, max-age=15778463, $asset_immutable";
#               access_log off;     # Optional: Don't log access to assets

#               location ~ \.wasm$ {
#                   default_type application/wasm;
#               }
#           }

#           location ~ \.woff2?$ {
#               try_files $uri /index.php$request_uri;
#               expires 7d;         # Cache-Control policy borrowed from `.htaccess`
#               access_log off;     # Optional: Don't log access to assets
#           }

#           # Rule borrowed from `.htaccess`
#           location /remote {
#               return 301 /remote.php$request_uri;
#           }

#           location / {
#               try_files $uri $uri/ /index.php$request_uri;
#           }
#       }
#     }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: 50-server.cnf
  namespace: nextcloud
data:
  50-server.cnf: |
    #
    # These groups are read by MariaDB server.
    # Use it for options that only the server (but not clients) should see

    # this is read by the standalone daemon and embedded servers
    [server]

    # this is only for the mariadbd daemon
    [mariadbd]

    #
    # * Basic Settings
    #

    #user                    = mysql
    pid-file                = /run/mysqld/mysqld.pid
    basedir                 = /usr
    #datadir                 = /var/lib/mysql
    #tmpdir                  = /tmp

    # Broken reverse DNS slows down connections considerably and name resolve is
    # safe to skip if there are no "host by domain name" access grants
    #skip-name-resolve

    # Instead of skip-networking the default is now to listen only on
    # localhost which is more compatible and is not less secure.
    # bind-address            = 0.0.0.0
    # skip-networking=0
    # skip-bind-address

    #
    # * Fine Tuning
    #

    #key_buffer_size        = 128M
    #max_allowed_packet     = 1G
    #thread_stack           = 192K
    #thread_cache_size      = 8
    # This replaces the startup script and checks MyISAM tables if needed
    # the first time they are touched
    #myisam_recover_options = BACKUP
    #max_connections        = 100
    #table_cache            = 64

    #
    # * Logging and Replication
    #

    # Both location gets rotated by the cronjob.
    # Be aware that this log type is a performance killer.
    # Recommend only changing this at runtime for short testing periods if needed!
    #general_log_file       = /var/log/mysql/mysql.log
    #general_log            = 1

    # Error logging goes via stdout/stderr, which on systemd systems goes to
    # journald.
    # Enable this if you want to have error logging into a separate file
    #log_error = /var/log/mysql/error.log
    # Enable the slow query log to see queries with especially long duration
    #log_slow_query_file    = /var/log/mysql/mariadb-slow.log
    #log_slow_query_time    = 10
    #log_slow_verbosity     = query_plan,explain
    #log-queries-not-using-indexes
    #log_slow_min_examined_row_limit = 1000

    # The following can be used as easy to replay backup logs or for replication.
    # note: if you are setting up a replica, see README.Debian about other
    #       settings you may need to change.
    #server-id              = 1
    #log_bin                = /var/log/mysql/mysql-bin.log
    expire_logs_days        = 10
    #max_binlog_size        = 100M

    #
    # * SSL/TLS
    #

    # For documentation, please read
    # https://mariadb.com/kb/en/securing-connections-for-client-and-server/
    #ssl-ca = /etc/mysql/cacert.pem
    #ssl-cert = /etc/mysql/server-cert.pem
    #ssl-key = /etc/mysql/server-key.pem
    #require-secure-transport = on

    #
    # * Character sets
    #

    # MySQL/MariaDB default is Latin1, but in Debian we rather default to the full
    # utf8 4-byte character set. See also client.cnf
    character-set-server  = utf8mb4
    collation-server      = utf8mb4_general_ci

    #
    # * InnoDB
    #

    # InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
    # Read the manual for more InnoDB related options. There are many!
    # Most important is to give InnoDB 80 % of the system RAM for buffer use:
    # https://mariadb.com/kb/en/innodb-system-variables/#innodb_buffer_pool_size
    #innodb_buffer_pool_size = 8G

    # this is only for embedded server
    [embedded]

    # This group is only read by MariaDB servers, not by MySQL.
    # If you use the same .cnf file for MySQL and MariaDB,
    # you can put MariaDB-only options here
    [mariadbd]

    # This group is only read by MariaDB-11.2 servers.
    # If you use the same .cnf file for MariaDB of different versions,
    # use this group for options that older servers don't understand
    [mariadb-11.2]