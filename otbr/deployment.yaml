apiVersion: apps/v1
kind: Deployment
metadata:
  name: otbr
  namespace: domotica2
  labels:
    app: otbr
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: otbr
  template:
    metadata:
      labels:
        app: otbr
    spec:
      # Standard cluster networking (no host network needed for remote RCP)
      hostNetwork: true  # Not needed for remote RCP via socket
      dnsPolicy: ClusterFirstWithHostNet
      
      containers:
      - name: otbr
        image: openthread/border-router:latest
        imagePullPolicy: Always
        
        # Security context with required privileges for network management
        securityContext:
          privileged: true
        
        # Resource limits and requests
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Environment variables from ConfigMap
        envFrom:
        - configMapRef:
            name: otbr-config
        
        # Ports for OTBR services
        ports:
        - name: web-rest
          containerPort: 8081
        
        # Volume mounts for persistent data and network access
        volumeMounts:
        - name: otbr-data
          mountPath: /data
        - name: host-dev
          mountPath: /dev
        - name: shared-tmp
          mountPath: /tmp
        
        # El REST de OTBR escucha en 127.0.0.1:8081 por diseño.
          # Para readiness usamos un exec local a loopback.
        readinessProbe:
          exec:
            command: ["sh","-c","wget -qO- http://127.0.0.1:8081/node/version >/dev/null"]
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 6
        livenessProbe:
          exec:
            command: ["sh","-c","wget -qO- http://127.0.0.1:8081/node/version >/dev/null"]
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 3

      # ----- Sidecar: socat (TCP->PTY) -----
      - name: socat
        image: alpine/socat:1.8.0.1
        securityContext:
          privileged: true
        env:
          - { name: RCP_HOST, value: "192.168.50.18" }
          - { name: RCP_PORT, value: "6638" }
        command: ["/bin/sh","-c"]
        args:
          - |
            # Reintenta en bucle por si el MR3 reinicia o pierde enlace
            while true; do
              echo "Arrancando socat hacia ${RCP_HOST}:${RCP_PORT}..."
              socat -d -d \
                pty,link=/tmp/ttyOTBR,raw,echo=0,mode=666 \
                tcp:${RCP_HOST}:${RCP_PORT}
              echo "socat salió, reintentando en 2s"; sleep 2
            done
        volumeMounts:
          - { name: host-dev, mountPath: /dev }    # /dev del host (para devpts compartido)
          - { name: shared-tmp, mountPath: /tmp }  # coloca el enlace /tmp/ttyOTBR aquí

      # Sidecar 2: proxy REST (escucha 0.0.0.0:8082 -> 127.0.0.1:8081)
      - name: rest-proxy
        image: alpine/socat
        command:
          - sh
          - -c
          - |
            set -e
            socat -d -d TCP-LISTEN:8082,reuseaddr,fork TCP:127.0.0.1:8081
        ports:
          - name: rest-proxy
            containerPort: 8082
            protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 10
      
      # Volumes definition
      volumes:
      - name: otbr-data
        persistentVolumeClaim:
          claimName: otbr-data
      - name: host-dev
        hostPath:
          path: /dev
          type: Directory
      - name: shared-tmp
        emptyDir: {}
      
      # Node affinity for worker nodes (no specific hardware requirements for remote RCP)
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - "true"
              - key: node.kubernetes.io/performance
                operator: In
                values:
                - "high"
