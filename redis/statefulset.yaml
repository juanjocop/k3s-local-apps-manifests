apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: cachedbs
spec:
  serviceName: "redis"
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
      annotations:
        config.linkerd.io/skip-outbound-ports: "6379"
        config.linkerd.io/skip-inbound-ports: "6379"
    spec:
      containers:
      - name: redis
        image: redis:7.0.14-alpine
        ports:
        - containerPort: 6379
        args: [ "--requirepass", "$(REDIS_PASSWORD)" ]
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-password
        # volumeMounts:
        # - name: redis-config
        #   mountPath: /conf/redis.conf
        #   subPath: redis.conf
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
      # volumes:
      # - name: redis-config
      #   configMap:
      #     name: redis-configmap
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - "true"